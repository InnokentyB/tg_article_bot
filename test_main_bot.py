#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""
import asyncio
from dotenv import load_dotenv
import os

def test_main_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    token = os.getenv('ARTICLE_BOT_TOKEN')
    database_url = os.getenv('DATABASE_URL')
    
    print(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   –¢–æ–∫–µ–Ω: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if token else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' if database_url else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}")
    
    if token:
        print(f"   –¢–æ–∫–µ–Ω: {token[:10]}...{token[-10:]}")
    
    return bool(token and database_url)

async def test_bot_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API...")
    
    load_dotenv()
    token = os.getenv('ARTICLE_BOT_TOKEN')
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        from aiogram import Bot
        
        bot = Bot(token=token)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: {bot_info.first_name} (@{bot_info.username})")
        
        await bot.session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_bot_process():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞"""
    import subprocess
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        if 'telegram_bot.py' in result.stdout:
            print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False

def show_categorization_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüè∑Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print("   ‚Ä¢ –ë–∞–∑–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (rule-based)")
    print("   ‚Ä¢ AI –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (OpenAI)")
    print("   ‚Ä¢ BART –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (transformers)")
    print("   ‚Ä¢ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    print("   ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞")
    print("   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—é–º–µ")

def show_features():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    print("\nüéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞:")
    print("   ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ URL")
    print("   ‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ PostgreSQL")
    print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π")
    print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
    print("   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤")
    print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_ok = test_main_bot()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    process_running = check_bot_process()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connection_ok = asyncio.run(test_bot_connection())
    
    if config_ok and process_running and connection_ok:
        print("\nüéâ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        show_categorization_info()
        show_features()
        
        print("\nüì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("1. –û—Ç–∫—Ä—ã—Ç—å Telegram")
        print("2. –ù–∞–π—Ç–∏ –±–æ—Ç–∞ @article_storage_bot")
        print("3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å /start")
        print("4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        print("\nüìù –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏:")
        print("   ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ URL")
        print("   ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞")
        print("   ‚Ä¢ –ë–∞–∑–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
        print("   ‚Ä¢ AI –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)")
        print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("   ‚Ä¢ –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
        
        print("\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π!")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º")
        if not config_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        if not process_running:
            print("   - –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        if not connection_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Telegram API")

if __name__ == "__main__":
    main()
