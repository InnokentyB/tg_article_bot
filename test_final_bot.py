#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""
import asyncio
from dotenv import load_dotenv
import os

async def test_bot_final():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–æ—Ç–∞"""
    print("üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    token = os.getenv('ARTICLE_BOT_TOKEN')
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        from aiogram import Bot
        
        bot = Bot(token=token)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: {bot_info.first_name} (@{bot_info.username})")
        
        await bot.session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_bot_process():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞"""
    import subprocess
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        if 'simple_article_bot' in result.stdout:
            print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–æ—Ç–∞\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    process_running = check_bot_process()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connection_ok = asyncio.run(test_bot_final())
    
    if process_running and connection_ok:
        print("\nüéâ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π!")
        print("\nüì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("1. –û—Ç–∫—Ä—ã—Ç—å Telegram")
        print("2. –ù–∞–π—Ç–∏ –±–æ—Ç–∞ @article_storage_bot")
        print("3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å /start")
        print("4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        print("\nüè∑Ô∏è –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è:")
        print("   ‚Ä¢ 6 –∫–∞—Ç–µ–≥–æ—Ä–∏–π: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ù–∞—É–∫–∞, –ë–∏–∑–Ω–µ—Å, –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –ú–µ–¥–∏—Ü–∏–Ω–∞, –§–∏–Ω–∞–Ω—Å—ã")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ URL")
        print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print("   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è + –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
        
        print("\nüìù –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   ‚Ä¢ https://techcrunch.com/ai-article ‚Üí –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
        print("   ‚Ä¢ https://science.org/research ‚Üí –ù–∞—É–∫–∞")
        print("   ‚Ä¢ https://business.com/startup ‚Üí –ë–∏–∑–Ω–µ—Å")
        print("   ‚Ä¢ https://health.com/medical ‚Üí –ú–µ–¥–∏—Ü–∏–Ω–∞")
        print("   ‚Ä¢ https://finance.com/crypto ‚Üí –§–∏–Ω–∞–Ω—Å—ã")
        print("   ‚Ä¢ https://tech.com/science-ai ‚Üí –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ù–∞—É–∫–∞")
        
        print("\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º")

if __name__ == "__main__":
    main()
