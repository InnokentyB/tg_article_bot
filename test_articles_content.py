#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π
"""
import requests

def test_articles_content():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π"""
    base_url = "http://localhost:8000"
    
    print("üì∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    login_data = {
        "username": "admin",
        "password": "fakehashedpassword"
    }
    
    try:
        response = session.post(f"{base_url}/login", data=login_data, timeout=10, allow_redirects=False)
        if response.status_code != 302:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            return
        print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç–∞—Ç–µ–π
    try:
        response = session.get(f"{base_url}/articles?page=1&per_page=20", timeout=10)
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            content = response.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            checks = [
                ("–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "–ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–∞—Ç–µ–π"),
                ("–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è", "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Å—Ç–∞—Ç–µ–π"),
                ("–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                ("–ù–∞—É–∫–∞", "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                ("–ë–∏–∑–Ω–µ—Å", "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                ("active", "–°—Ç–∞—Ç—É—Å—ã —Å—Ç–∞—Ç–µ–π"),
                ("pending", "–°—Ç–∞—Ç—É—Å—ã —Å—Ç–∞—Ç–µ–π"),
                ("–ü–∞–≥–∏–Ω–∞—Ü–∏—è", "–ù–∞–≤–∏–≥–∞—Ü–∏—è"),
                ("20", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"),
                ("50", "–û–ø—Ü–∏—è 50 —Å—Ç–∞—Ç–µ–π"),
                ("article-card", "–ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–µ–π"),
                ("btn-outline-primary", "–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π")
            ]
            
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:")
            for check, description in checks:
                if check in content:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ '{check}'")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ '{check}'")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏
            article_count = content.count("article-card")
            print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å—Ç–∞—Ç–µ–π: {article_count}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
            if "–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑" in content:
                print("‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print("‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_articles_content()
