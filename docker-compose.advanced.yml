version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tg_article_bot_db
    environment:
      POSTGRES_DB: article_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tg_article_bot_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Advanced ML Service
  ml-service:
    build:
      context: ./ml-service-advanced
      dockerfile: Dockerfile
    container_name: tg_article_bot_ml
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
    volumes:
      - ml_models:/app/models
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Advanced API Server
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tg_article_bot_api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/article_bot
      - REDIS_URL=redis://redis:6379
      - ML_SERVICE_URL=http://ml-service:8001
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: tg_article_bot_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.advanced.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-server
      - ml-service
    restart: unless-stopped

volumes:
  postgres_data:
  ml_models:
