#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ dashboard
"""
import requests

def debug_dashboard():
    """–û—Ç–ª–∞–¥–∫–∞ dashboard"""
    base_url = "http://localhost:8000"
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ dashboard...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
    login_data = {
        "username": "admin",
        "password": "fakehashedpassword"
    }
    
    try:
        response = session.post(f"{base_url}/login", data=login_data, timeout=10, allow_redirects=False)
        if response.status_code != 302:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            return
        print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω (admin)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º dashboard
    try:
        response = session.get(f"{base_url}/dashboard", timeout=10)
        print(f"Dashboard Status: {response.status_code}")
        
        if response.status_code == 200:
            content = response.text
            
            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã
            debug_checks = [
                ("is_admin", "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è is_admin"),
                ("admin", "–†–æ–ª—å admin"),
                ("user.role", "user.role"),
                ("role", "–†–æ–ª—å"),
                ("{% if is_admin %}", "–£—Å–ª–æ–≤–∏–µ is_admin"),
                ("{% if user.role == 'admin' %}", "–£—Å–ª–æ–≤–∏–µ user.role"),
                ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "–¢–µ–∫—Å—Ç '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'"),
                ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "–¢–µ–∫—Å—Ç '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'"),
                ("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "–¢–µ–∫—Å—Ç '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'")
            ]
            
            print("\nüîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
            for check, description in debug_checks:
                if check in content:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ '{check}'")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ '{check}'")
            
            # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –±–ª–æ–∫–∏
            if "{% if is_admin %}" in content:
                print("\nüìã –ù–∞–π–¥–µ–Ω—ã –±–ª–æ–∫–∏ is_admin:")
                lines = content.split('\n')
                for i, line in enumerate(lines):
                    if "{% if is_admin %}" in line:
                        print(f"   –°—Ç—Ä–æ–∫–∞ {i+1}: {line.strip()}")
                        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
                        for j in range(1, 5):
                            if i+j < len(lines):
                                print(f"   –°—Ç—Ä–æ–∫–∞ {i+j+1}: {lines[i+j].strip()}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ dashboard: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    debug_dashboard()
