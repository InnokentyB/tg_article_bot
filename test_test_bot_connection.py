#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
"""
import asyncio
from dotenv import load_dotenv
import os

async def test_test_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞"""
    print("üî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞...")
    
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = os.getenv('ARTICLE_BOT_TEST_TOKEN', '8270061551:AAFC5sxwxTM4zz8mzy7quKbSvG85lkGbyDs')
    print(f"–¢–æ–∫–µ–Ω: {token[:10]}...{token[-10:]}")
    
    try:
        from aiogram import Bot
        
        bot = Bot(token=token)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: {bot_info.first_name} (@{bot_info.username})")
        
        await bot.session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞\n")
    
    success = asyncio.run(test_test_bot())
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å: python run_test_bot.py")
        print("2. –ù–∞–π—Ç–∏ –±–æ—Ç–∞: @article_storage_test_bot")
        print("3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å /start")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–æ–≤—ã–º –±–æ—Ç–æ–º")

if __name__ == "__main__":
    main()
