#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤ - –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ
"""
import asyncio
from dotenv import load_dotenv
import os

def test_bot_configuration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–æ–≤"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–æ–≤...")
    
    load_dotenv()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
    prod_token = os.getenv('ARTICLE_BOT_TOKEN')
    test_token = os.getenv('ARTICLE_BOT_TEST_TOKEN')
    database_url = os.getenv('DATABASE_URL')
    
    print(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   üè≠ –ü—Ä–æ–¥–∞–∫—à–µ–Ω —Ç–æ–∫–µ–Ω: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if prod_token else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   üî¨ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if test_token else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' if database_url else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}")
    
    if prod_token:
        print(f"   üè≠ –ü—Ä–æ–¥–∞–∫—à–µ–Ω: {prod_token[:10]}...{prod_token[-10:]}")
    if test_token:
        print(f"   üî¨ –¢–µ—Å—Ç–æ–≤—ã–π: {test_token[:10]}...{test_token[-10:]}")
    
    return bool(prod_token and test_token and database_url)

async def test_bot_connections():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç–∞–º"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–æ—Ç–∞–º...")
    
    load_dotenv()
    
    results = {}
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç–∞
    prod_token = os.getenv('ARTICLE_BOT_TOKEN')
    if prod_token:
        try:
            from aiogram import Bot
            
            bot = Bot(token=prod_token)
            bot_info = await bot.get_me()
            print(f"   ‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç: {bot_info.first_name} (@{bot_info.username})")
            results['production'] = True
            
            await bot.session.close()
        except Exception as e:
            print(f"   ‚ùå –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç: {e}")
            results['production'] = False
    else:
        print("   ‚ùå –ü—Ä–æ–¥–∞–∫—à–µ–Ω —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        results['production'] = False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
    test_token = os.getenv('ARTICLE_BOT_TEST_TOKEN')
    if test_token:
        try:
            from aiogram import Bot
            
            bot = Bot(token=test_token)
            bot_info = await bot.get_me()
            print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç: {bot_info.first_name} (@{bot_info.username})")
            results['test'] = True
            
            await bot.session.close()
        except Exception as e:
            print(f"   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç: {e}")
            results['test'] = False
    else:
        print("   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        results['test'] = False
    
    return results

def check_bot_processes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–æ–≤...")
    
    import subprocess
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        output = result.stdout
        
        prod_running = 'telegram_bot.py' in output
        test_running = 'telegram_bot_test.py' in output
        
        print(f"   üè≠ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç: {'‚úÖ –ó–∞–ø—É—â–µ–Ω' if prod_running else '‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω'}")
        print(f"   üî¨ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç: {'‚úÖ –ó–∞–ø—É—â–µ–Ω' if test_running else '‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω'}")
        
        return {'production': prod_running, 'test': test_running}
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return {'production': False, 'test': False}

def show_bot_differences():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –±–æ—Ç–∞–º–∏"""
    print("\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–æ—Ç–æ–≤:")
    
    print("\nüè≠ –ü–†–û–î–ê–ö–®–ï–ù –ë–û–¢ (@article_storage_bot):")
    print("   ‚úÖ –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª")
    print("   ‚úÖ –†–µ–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ AI –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ BART –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π")
    print("   ‚úÖ –ê–Ω–∞–ª–∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
    print("   üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü—Ä–æ–¥–∞–∫—à–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
    print("   üë• –ê—É–¥–∏—Ç–æ—Ä–∏—è: –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    
    print("\nüî¨ –¢–ï–°–¢–û–í–´–ô –ë–û–¢ (@article_storage_test_bot):")
    print("   ‚úÖ –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª")
    print("   ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ AI –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ BART –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    print("   ‚úÖ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    print("   ‚úÖ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏")
    print("   üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞")
    print("   üë• –ê—É–¥–∏—Ç–æ—Ä–∏—è: –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∏")

def show_usage_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:")
    
    print("\nüè≠ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python telegram_bot.py")
    print("   2. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: @article_storage_bot")
    print("   3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    print("   4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é")
    
    print("\nüî¨ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run_test_bot.py")
    print("   2. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: @article_storage_test_bot")
    print("   3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    print("   4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é")
    
    print("\nüîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –±–æ—Ç–∞–º–∏:")
    print("   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–æ—Ç: Ctrl+C")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω—É–∂–Ω—ã–π –±–æ—Ç")
    print("   ‚Ä¢ –û–±–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –ø–æ–º–µ—á–∞–µ—Ç —Å—Ç–∞—Ç—å–∏ –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–µ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_ok = test_bot_configuration()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    connections = asyncio.run(test_bot_connections())
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    processes = check_bot_processes()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è
    show_bot_differences()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_usage_instructions()
    
    print(f"\nüìã –ò–¢–û–ì:")
    if config_ok:
        print("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    else:
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
    
    if connections.get('production'):
        print("   ‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print("   ‚ùå –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    if connections.get('test'):
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print("   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    if processes.get('production'):
        print("   ‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    else:
        print("   ‚ùå –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    if processes.get('test'):
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    else:
        print("   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    if not processes.get('production') and not processes.get('test'):
        print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –±–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    elif processes.get('production') and processes.get('test'):
        print("   ‚Ä¢ –û–±–∞ –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω—ã - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π")
    elif processes.get('production'):
        print("   ‚Ä¢ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω - –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π")
    elif processes.get('test'):
        print("   ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω - –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω")

if __name__ == "__main__":
    main()
